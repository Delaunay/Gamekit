
.. _program_listing_file_Source_Gamekit_Gamekit.Build.cs:

Program Listing for File Gamekit.Build.cs
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_Gamekit.Build.cs>` (``Source/Gamekit/Gamekit.Build.cs``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: csharp

   // BSD 3-Clause License Copyright (c) 2022, Pierre Delaunay All rights reserved.
   
   using UnrealBuildTool;
   
   public class Gamekit : ModuleRules
   {
       public Gamekit(ReadOnlyTargetRules Target) : base(Target)
       {
           PCHUsage = ModuleRules.PCHUsageMode.UseExplicitOrSharedPCHs;
   
           PrivateIncludePaths.AddRange(new string[]{
               "Gamekit"
           });
   
           PublicDependencyModuleNames.AddRange(new string[]{
               "NetCore",
               "Core",
               "RenderCore",
               "RHI"
           });
   
           PrivateDependencyModuleNames.AddRange(new string[] {
               // Gameplay Abilities
               "GameplayAbilities",
               "GameplayTags",
               "GameplayTasks",
   
               "Renderer",
               "Projects",
   
               // Used for ads
               "HTTP",
               "Json",
               "JsonUtilities",
   
               // Matchmaking
               "OnlineSubsystem",
               "OnlineSubsystemUtils",
   
               // Defaults
               "CoreUObject",
               "Engine",
               "MoviePlayer",
               "InputCore",
               "HeadMountedDisplay",
               "NavigationSystem",
               "AIModule",
               "UMG",
               "Slate",
               "SlateCore",
   
               // Particles
               "Niagara",
               //
               "EnhancedInput",
               "Landscape",
           });
   
           if (Target.bBuildEditor == true)
           {
               PrivateDependencyModuleNames.Add("EditorFramework");
               PrivateDependencyModuleNames.Add("UnrealEd");
               PrivateDependencyModuleNames.Add("Slate");
               PrivateDependencyModuleNames.Add("SequenceRecorder");
           }
       }
   }
