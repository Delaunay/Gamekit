
.. _program_listing_file_Source_Gamekit_FogOfWar_Strategy_GK_FoW_RayCasting_V1.h:

Program Listing for File GK_FoW_RayCasting_V1.h
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_FogOfWar_Strategy_GK_FoW_RayCasting_V1.h>` (``Source/Gamekit/FogOfWar/Strategy/GK_FoW_RayCasting_V1.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // BSD 3-Clause License Copyright (c) 2022, Pierre Delaunay All rights reserved.
   
   #pragma once
   
   // Gamekit
   #include "Gamekit/FogOfWar/Strategy/GK_FoW_Strategy.h"
   
   // Unreal Engine
   #include "Components/ActorComponent.h"
   #include "CoreMinimal.h"
   
   // Generated
   #include "GK_FoW_RayCasting_V1.generated.h"
   
   void BroadCastEvents(AActor *Seer, UGKFogOfWarComponent *SeerComponent, AActor *Target);
   
   struct FGKLinePoints
   {
       FVector Start;
       FVector End;
   };
   
   UCLASS(BlueprintType)
   class GAMEKIT_API UGKRayCasting_Line: public UGKFogOfWarStrategy
   {
       GENERATED_BODY()
   
       public:
       UGKRayCasting_Line();
   
       virtual void Initialize();
   
       bool SupportVisbilityQuery() const override { return true; }
   
       bool IsVisible(FGenericTeamId SeerTeam, FVector Loc) const override;
   
       void DrawFactionFog(class AGKFogOfWarTeam *FactionFog);
   
       virtual void DrawLineOfSight(class AGKFogOfWarTeam *FactionFog, class UGKFogOfWarComponent *c);
   
       virtual class UTexture *GetFactionTexture(FName name, bool bCreateRenderTarget = true);
   
       class UCanvasRenderTarget2D *GetFactionRenderTarget(FName name, bool bCreateRenderTarget = true);
   
       class UCanvasRenderTarget2D *GetFactionRenderTarget(FName Name) const;
   
       protected:
       virtual void DrawObstructedLineOfSight(class AGKFogOfWarTeam *FactionFog, UGKFogOfWarComponent *c);
   
       virtual void DrawUnobstructedLineOfSight(class AGKFogOfWarTeam *FactionFog, UGKFogOfWarComponent *c);
   
       void DrawUnobstructedLineOfSight_Draw(class AGKFogOfWarTeam *FactionFog, UGKFogOfWarComponent *c);
   
       void DrawLines(class UGKFogOfWarComponent *c);
   
       class UCanvasRenderTarget2D *CreateRenderTarget();
   
       TArray<FGKLinePoints> Lines;
   
       UPROPERTY(Transient)
       TMap<FName, class UCanvasRenderTarget2D *> FogFactions;
   
       bool DrawingFog;
   };
