
.. _program_listing_file_Source_Gamekit_GKSharedTexture.h:

Program Listing for File GKSharedTexture.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_GKSharedTexture.h>` (``Source/Gamekit/GKSharedTexture.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // BSD 3-Clause License Copyright (c) 2022, Pierre Delaunay All rights reserved.
   
   #pragma once
   
   #include "Components/ActorComponent.h"
   #include "CoreMinimal.h"
   
   #include "GKSharedTexture.generated.h"
   
   UCLASS(ClassGroup = (Custom), meta = (BlueprintSpawnableComponent))
   class GAMEKIT_API UGKSharedTexture: public UActorComponent
   {
       GENERATED_BODY()
   
       public:
       // Sets default values for this component's properties
       UGKSharedTexture();
   
       protected:
       // Called when the game starts
       virtual void BeginPlay() override;
   
       public:
       // Called every frame
       // virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)
       // override;
   
       UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Texture, meta = (AllowPrivateAccess = "true"))
       class UCanvasRenderTarget2D *RenderTarget;
   
       UFUNCTION(BlueprintGetter)
       class UCanvasRenderTarget2D *GetRenderTarget() const { return RenderTarget; }
   
       UFUNCTION(BlueprintSetter)
       void SetRenderTarget(class UCanvasRenderTarget2D *v) { RenderTarget = v; }
   
       // (0, 0) is top-left corner
       UFUNCTION(BlueprintCallable)
       void AddPoint(FIntPoint Index, FLinearColor Value);
   
       UFUNCTION(BlueprintCallable)
       void AddPointCentered(FIntPoint Index, FLinearColor Value);
   
       UFUNCTION(BlueprintCallable)
       void RemovePoint(FIntPoint Index);
   
       UFUNCTION(BlueprintCallable)
       FColor ReadPoint(FIntPoint p);
   
       UFUNCTION(BlueprintCallable)
       FColor ReadCenteredPoint(FIntPoint p);
   
       private:
       class UTexture2D *CPUTexture;
   };
