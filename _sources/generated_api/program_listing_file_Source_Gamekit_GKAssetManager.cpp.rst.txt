
.. _program_listing_file_Source_Gamekit_GKAssetManager.cpp:

Program Listing for File GKAssetManager.cpp
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_GKAssetManager.cpp>` (``Source/Gamekit/GKAssetManager.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // BSD 3-Clause License Copyright (c) 2022, Pierre Delaunay All rights reserved.
   
   #include "GKAssetManager.h"
   
   #include "Items/GKItem.h"
   
   #include "AbilitySystemGlobals.h"
   
   UGKAssetManager &UGKAssetManager::Get()
   {
       UGKAssetManager *This = Cast<UGKAssetManager>(GEngine->AssetManager);
   
       if (This)
       {
           return *This;
       }
       else
       {
           UE_LOG(LogGamekit, Fatal, TEXT("Invalid AssetManager in DefaultEngine.ini, must be GKAssetManager!"));
           return *NewObject<UGKAssetManager>(); // never calls this
       }
   }
   
   void UGKAssetManager::StartInitialLoading() { Super::StartInitialLoading(); }
   
   UGKItem *UGKAssetManager::ForceLoadItem(const FPrimaryAssetId &PrimaryAssetId, bool bLogWarning)
   {
       FSoftObjectPath ItemPath = GetPrimaryAssetPath(PrimaryAssetId);
   
       // This does a synchronous load and may hitch
       UGKItem *LoadedItem = Cast<UGKItem>(ItemPath.TryLoad());
   
       if (bLogWarning && LoadedItem == nullptr)
       {
           UE_LOG(LogGamekit, Warning, TEXT("Failed to load item for identifier %s!"), *PrimaryAssetId.ToString());
       }
   
       return LoadedItem;
   }
