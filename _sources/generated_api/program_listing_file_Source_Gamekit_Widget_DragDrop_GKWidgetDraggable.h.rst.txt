
.. _program_listing_file_Source_Gamekit_Widget_DragDrop_GKWidgetDraggable.h:

Program Listing for File GKWidgetDraggable.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_Widget_DragDrop_GKWidgetDraggable.h>` (``Source/Gamekit/Widget/DragDrop/GKWidgetDraggable.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   // Gamekit
   #include "Gamekit/Widget/DragDrop/GKWidgetDragVisual.h"
   
   // Unreal Engine
   #include "Blueprint/UserWidget.h"
   
   // Generated
   #include "GKWidgetDraggable.generated.h"
   
   // UFUNCTION(BlueprintImplementableEvent
   // UFUNCTION(BlueprintNativeEvent)
   
   UCLASS(BlueprintType, Blueprintable, meta = (DisableNativeTick))
   class GAMEKIT_API UGKWidgetDraggable: public UUserWidget
   {
       GENERATED_BODY()
   
       public:
       virtual void NativeConstruct() override;
   
       // TODO: Move this to the DropZone
       // +create a cached intance of the DragVisual
   
       // //
       UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Drag and Drop")
       FKey DragKey;
   
       UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Drag and Drop")
       TSubclassOf<UGKWidgetDragVisual> DragVisualClass;
   
       UFUNCTION(BlueprintImplementableEvent, BlueprintCosmetic, Category = "Drag and Drop")
       bool IsDraggable();
   
       bool IsDraggable_Native();
   
       // Drag Operation Creation
       // -----------------------
   
       FReply NativeOnMouseButtonDown(const FGeometry &InGeometry, const FPointerEvent &InMouseEvent) override;
   
       void NativeOnDragDetected(const FGeometry &    InGeometry,
                                 const FPointerEvent &InMouseEvent,
                                 UDragDropOperation *&OutOperation) override;
   
       // Events
       // ------
       // We are not using NativeOnDrop/NativeOnDragCancelled
       // because they require a `FDragDropEvent` which is not given by UDragDropOperation delegates
       UFUNCTION()
       void OnDropCancelled_Native(class UDragDropOperation *Operation);
   
       UFUNCTION(BlueprintImplementableEvent, BlueprintCosmetic, Category = "Drag and Drop")
       void OnDropCancelled(class UDragDropOperation *Operation);
   
       UFUNCTION()
       void OnDropSuccess_Native(class UDragDropOperation *Operation);
   
       UFUNCTION(BlueprintImplementableEvent, BlueprintCosmetic, Category = "Drag and Drop")
       void OnDropSuccess(class UDragDropOperation *Operation);
   };
