
.. _program_listing_file_Source_Gamekit_Abilities_Targeting_GKAbilityTarget_Actor.h:

Program Listing for File GKAbilityTarget_Actor.h
================================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Gamekit_Abilities_Targeting_GKAbilityTarget_Actor.h>` (``Source/Gamekit/Abilities/Targeting/GKAbilityTarget_Actor.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // BSD 3-Clause License Copyright (c) 2022, Pierre Delaunay All rights reserved.
   #pragma once
   
   // Gamekit
   #include "Gamekit/Abilities/GKAbilityStatic.h"
   
   // Unreal Engine
   #include "Abilities/GameplayAbilityTargetActor.h"
   
   // Generated
   #include "GKAbilityTarget_Actor.generated.h"
   
   class APlayerController;
   class UAbilitySystemComponent;
   class UGameplayAbility;
   
   UCLASS(Blueprintable)
   class GAMEKIT_API AGKAbilityTarget_Actor: public AGameplayAbilityTargetActor
   {
       GENERATED_UCLASS_BODY()
   
       public:
       // deprecate this
       virtual void StartTargeting(class UGameplayAbility *Ability) override final;
   
       virtual void StartTargeting(class UGKGameplayAbility *Ability);
   
       virtual void InitializeFromAbilityData(FGKAbilityStatic const &AbilityData);
   
       UFUNCTION(BlueprintImplementableEvent,
                 DisplayName = "InitializeFromAbilityData",
                 meta        = (ScriptName = "InitializeFromAbilityData"))
       void K2_InitializeFromAbilityData(FGKAbilityStatic const &AbilityData);
   
       virtual void EnableUserInput();
   
       virtual void StopTargeting();
   
       // UPROPERTY()
       // UGameplayAbility* OwningAbility;
   
       UPROPERTY(BlueprintReadOnly)
       class UAbilitySystemComponent *AbilitySystemComponent;
   
       UPROPERTY(BlueprintReadWrite);
       bool bTickEnabled;
   
       public:
       void EndPlay(const EEndPlayReason::Type EndPlayReason) final;
   };
